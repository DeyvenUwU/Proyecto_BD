package ventanas;

import conexiones.accesoCategorias;
import conexiones.accesoProductos;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import objetos.Categoria;
import objetos.Empleado;
import objetos.Producto;

public class Inventario extends javax.swing.JFrame {

    private Empleado usuario;
    private accesoCategorias categorias;
    private accesoProductos productos;
    private ArrayList<Categoria> categoriasData;
    private ArrayList<Producto> productosData;
    private ArrayList<Producto> filtro;
    
    public Inventario() {
        config();
    }
    
    public Inventario(Empleado usuario) {
        config();
        
        this.usuario = usuario;
    }
    
    private void config () {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        
        deshailitarTxtBuscar();
        fondo.requestFocus();
        categorias = new accesoCategorias();
        categoriasData = categorias.getTodasLasCategorias();
        for (Categoria c : categoriasData)
            cmbCategorias.addItem(c.getNombre());
        
        productos = new accesoProductos();
        productosData = productos.getTodosLosProductos();
        filtro = productosData;
        actualizarTabla(productosData);
        
        for (Producto p : productosData) {
            if (p.getFoto() != null) {
                if (p.getFotoLeida() == null) {
                    try {
                        BufferedImage foto = ImageIO.read(p.getFoto());
                        p.setFotoLeida(foto);
                    } catch (IOException ex) {
                        Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
            }
        }
    }
    
    private void actualizarTabla (ArrayList<Producto> lista) {
        DefaultTableModel tabla = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        
        tabla.addColumn("CODIGO BARRAS");
        tabla.addColumn("CLAVE");
        tabla.addColumn("DESCRIPCION");
        tabla.addColumn("MARCA");
        tabla.addColumn("CATEGORIA");
        tabla.addColumn("PRECIO");
        tabla.addColumn("STOCK");
        tabla.addColumn("ULTIMA MODI.");
        
        for (Producto p : lista) {
            Object[] Fila = new Object[8];
            Fila[0] = p.getCodigoBarras();
            Fila[1] = p.getClave();
            Fila[2] = p.getDescripcion();
            Fila[3] = p.getMarca();
            String categoria = categorias.getNombre(p.getIdCategoria());
            Fila[4] = categoria;
            Fila[5] = "$ " + String.format("%.2f", p.getPrecio());
            Fila[6] = p.getStock();
            Fila[7] = p.getUltimaModificacion();
            
            tabla.addRow(Fila);
        }
        
        tblProductos.setModel(tabla);
        tblProductos.setRowHeight(30);
        tblProductos.getColumnModel().getColumn(0).setPreferredWidth(120);
        tblProductos.getColumnModel().getColumn(1).setPreferredWidth(80);
        tblProductos.getColumnModel().getColumn(2).setPreferredWidth(190);
        tblProductos.getColumnModel().getColumn(3).setPreferredWidth(120);
        tblProductos.getColumnModel().getColumn(4).setPreferredWidth(150);
        tblProductos.getColumnModel().getColumn(5).setPreferredWidth(110);
        tblProductos.getColumnModel().getColumn(6).setPreferredWidth(70);
        tblProductos.getColumnModel().getColumn(7).setPreferredWidth(148);
        tblProductos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lblCantProductos.setText(lista.size() + " Producto(s)");
    }
    
    private void hailitarTxtBuscar () {
        txtBuscar.selectAll();
        txtBuscar.setBackground(Color.WHITE);
        txtBuscar.setForeground(Color.BLACK);
        
        if (txtBuscar.getText().equals("Buscar..."))
            txtBuscar.setText("");
    }
    
    private void deshailitarTxtBuscar () {
        if (txtBuscar.getText().equals("")) {
            txtBuscar.setBackground(new Color (230, 230, 230));
            txtBuscar.setForeground(Color.GRAY);
            txtBuscar.setText("Buscar...");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        itmModificar = new javax.swing.JMenuItem();
        itmEliminar = new javax.swing.JMenuItem();
        fondo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        cmbCategorias = new javax.swing.JComboBox<>();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        btnAgregarProducto = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        lblCantProductos = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();

        itmModificar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        itmModificar.setText("Modificar");
        itmModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmModificarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(itmModificar);

        itmEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        itmEliminar.setText("Eliminar");
        itmEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmEliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(itmEliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fondo.setBackground(new java.awt.Color(245, 173, 29));
        fondo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fondoMousePressed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitulo.setText("INVENTARIO DE PRODUCTOS");
        lblTitulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblTituloMousePressed(evt);
            }
        });

        cmbCategorias.setBackground(new java.awt.Color(102, 255, 102));
        cmbCategorias.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmbCategorias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas las Categorias" }));

        txtBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtBuscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarFocusLost(evt);
            }
        });
        txtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtBuscarMousePressed(evt);
            }
        });

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProductos.setComponentPopupMenu(jPopupMenu1);
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblProductosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        btnAgregarProducto.setBackground(new java.awt.Color(102, 255, 102));
        btnAgregarProducto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAgregarProducto.setText("Agregar producto...");
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });

        btnMenu.setBackground(new java.awt.Color(102, 255, 102));
        btnMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMenu.setText("Menu Principal");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        lblCantProductos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCantProductos.setText("N Producto(s)");
        lblCantProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblCantProductosMousePressed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(102, 255, 102));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblCantProductos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 383, Short.MAX_VALUE)
                        .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBuscar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, fondoLayout.createSequentialGroup()
                        .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, fondoLayout.createSequentialGroup()
                                .addComponent(cmbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        fondoLayout.setVerticalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addGap(20, 20, 20)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(cmbCategorias, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblCantProductos))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
        if (usuario.getPuesto().toLowerCase().equals("admin")) {
            this.dispose();
            FormularioProducto fp = new FormularioProducto(usuario);
            fp.setVisible(true);
        }
        else
            JOptionPane.showMessageDialog(this, "Los cajeros no pueden AGREGAR PRODUCTOS", "Sin permisos", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnAgregarProductoActionPerformed

    private void itmModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmModificarActionPerformed
        if (usuario.getPuesto().toLowerCase().equals("admin")) {
            int index = tblProductos.getSelectedRow();
            Producto p = filtro.get(index);
            this.dispose();
            FormularioProducto fp = new FormularioProducto(usuario, p);
            fp.setVisible(true);
        }
        else
            JOptionPane.showMessageDialog(this, "Los cajeros no pueden MODIFICAR PRODUCTOS", "Sin permisos", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_itmModificarActionPerformed

    private void itmEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmEliminarActionPerformed
        if (usuario.getPuesto().toLowerCase().equals("admin")) {
            int respuesta = JOptionPane.showConfirmDialog(null, 
                                                     "¿Estás seguro de que quieres borrar este producto?", 
                                                     "Confirmación", 
                                                     JOptionPane.YES_NO_OPTION, 
                                                     JOptionPane.QUESTION_MESSAGE);
            if (respuesta == JOptionPane.YES_OPTION) {
                int index = tblProductos.getSelectedRow();
                Producto p = filtro.get(index);

                productos.eliminarProducto(p.getId());
                productosData = productos.getTodosLosProductos();
                filtro.remove(p);
                actualizarTabla(filtro);
            }
        }
        else
            JOptionPane.showMessageDialog(this, "Los cajeros no pueden ELIMINAR PRODUCTOS", "Sin permisos", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_itmEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String categoria = "" + cmbCategorias.getSelectedItem();
        String texto = txtBuscar.getText().toLowerCase();
        boolean flagCat = categoria.equals("Todas las Categorias");
        boolean flagTexto = texto.equals("buscar...");
        
        if (flagCat && flagTexto && tblProductos.getRowCount() != productosData.size()) {
            filtro = productosData;
            actualizarTabla(productosData);
        }
        else {
            int indexCat = cmbCategorias.getSelectedIndex();
            filtro = new ArrayList<>();
                    
            for(Producto p : productosData) {
                String pCat = categorias.getNombre(p.getIdCategoria());
                if (indexCat == 0 || pCat.equals(categoria)) {
                    if (flagTexto)
                        filtro.add(p);
                    else if (p.getCodigoBarras().contains(texto) ||
                             p.getClave().toLowerCase().contains(texto) ||
                             p.getDescripcion().toLowerCase().contains(texto) ||
                             p.getMarca().toLowerCase().contains(texto) ||
                             pCat.toLowerCase().contains(texto))
                        filtro.add(p);
                }
            }
            
            actualizarTabla(filtro);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        this.dispose();
        Menu m = new Menu(usuario);
        m.setVisible(true);
    }//GEN-LAST:event_btnMenuActionPerformed

    private void tblProductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMousePressed
        deshailitarTxtBuscar();
        tblProductos.requestFocus();
        
        int index = tblProductos.rowAtPoint(tblProductos.getMousePosition());
        tblProductos.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_tblProductosMousePressed

    private void txtBuscarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarFocusGained
        hailitarTxtBuscar();
    }//GEN-LAST:event_txtBuscarFocusGained

    private void txtBuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarFocusLost
        deshailitarTxtBuscar();
    }//GEN-LAST:event_txtBuscarFocusLost

    private void txtBuscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMousePressed
        hailitarTxtBuscar();
        txtBuscar.requestFocus();
    }//GEN-LAST:event_txtBuscarMousePressed

    private void fondoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fondoMousePressed
        deshailitarTxtBuscar();
        fondo.requestFocus();
    }//GEN-LAST:event_fondoMousePressed

    private void lblTituloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTituloMousePressed
        deshailitarTxtBuscar();
        lblTitulo.requestFocus();
    }//GEN-LAST:event_lblTituloMousePressed

    private void lblCantProductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCantProductosMousePressed
        deshailitarTxtBuscar();
        lblCantProductos.requestFocus();
    }//GEN-LAST:event_lblCantProductosMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JComboBox<String> cmbCategorias;
    private javax.swing.JPanel fondo;
    private javax.swing.JMenuItem itmEliminar;
    private javax.swing.JMenuItem itmModificar;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCantProductos;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
